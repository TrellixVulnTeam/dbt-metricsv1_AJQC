
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'dbt_metrics'
version: '1.0.0'
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: 'default'

# These configurations specify where dbt should look for different types of files.
# The `source-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
source-paths: ["models"]
analysis-paths: ["analysis"]
test-paths: ["tests"]
seed-paths: ["data"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "target"  # directory which will store compiled SQL files
#clean-targets: "target"        # directories to be removed by `dbt clean`
#  - "target"
#  - "dbt_modules"


# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/ directory
# as tables. These settings can be overridden in the individual model files
# using the `{{ config(...) }}` macro.
#vars:
#  dbt_artifacts:
#    dbt_artifacts_database: dbt_metrics # optional, default is your target database
#    dbt_artifacts_schema: artifacts # optional, default is 'dbt_artifacts'
#    dbt_artifacts_table: artifacts # optional, default is 'artifacts'
#    dbt_artifacts_results_table: dbt_run_results # optional, default is 'dbt_run_results'
#    dbt_artifacts_result_nodes_table: dbt_run_result_nodes # optional, default is 'dbt_run_result_nodes'
#    dbt_artifacts_manifest_nodes_table: dbt_manifest_nodes # optional, default is 'dbt_manifest_nodes'

vars:
#  dbt_artifacts_database: your_db # optional, default is your target database
#  dbt_artifacts_schema: your_schema # optional, default is your target schema

#  env_vars: [
#    'ENV_VAR_1',
#    'ENV_VAR_2'
#  ]
#  dbt_vars: [
#    'var_1',
#    'var_2'
#  ]

models:
  dbt_metrics:
    # Config indicated by + and applies to all files under models/example/
    example:
      +materialized: table

#  dbt_artifacts:
#    +database: ""
#    +schema: ""
#    staging:
#      +database: ""
#      +schema: ""


on-run-end:
  - "{{ dbt_artifacts.upload_results(results) }}"
